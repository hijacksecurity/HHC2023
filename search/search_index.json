{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Welcome to the wild and wacky world of the 2023 SANS Holiday Hack Challenge write-up! Imagine Santa traded his sleigh for a cybersecurity keyboard and elves started coding instead of making toys. Yep, that's the vibe!</p> <p>This annual bash, courtesy of the brainy folks at SANS Institute, is like a holiday party for hackers. But instead of sharing eggnog recipes, we're diving deep into festive-themed puzzles that would make even Rudolph scratch his antlers in confusion.</p> <p>In this report, we're spilling the digital cocoa on what went down. Expect tales of epic hacks, brain-teasing challenges, and maybe a reindeer or two trying to figure out a firewall. It's all fun, games, and a sprinkle of tech magic.</p> <p>So, buckle up, grab your elf hat (or your favorite tech gadget), and let's unwrap the adventures of the 2023 SANS Holiday Hack Challenge! \ud83c\udf85\ud83d\udd12\ud83c\udf89</p> <p>Wow ChatGPT sure is pretty good at writing report intros! \ud83d\ude0a A little bit of personal touch about this year's challenge. My name is HijackSecurity, it's my 2nd year fully completing Holiday Hack Challenge and writing the report. Hats off to SANS team, thank you - you guys did an amazing job creating this challenge, HHC seems to somehow only keep getting better and better!</p> <p>This year's game was awesome - fun, challenging and highly rewarding! The challenges had it all - AI, healthy amount of Azure APIs, SQL injections,  lots of client-side code manipulation (JS breakpoints - what are those), some GameBoy hacking, lock-picking went back to high-school days, JWT's are cool, practical Java Deserialization exploitation,  casual quick &amp; dirty Python scripting, satellite hacking and the need to think outside the box like every hacking challenge demands.</p> <p>Please give this write-up a read - you can follow along through all the objectives. Use \"Navigation tip\" to easily walk through challenges step-by-step. Each Section has a set of Objectives which contain what the Objective is, Solution (including official Answer) and Response after completion, along with other supplemental information to stay true to the Holiday Hack story. </p> <p>100-page submission limit</p> <p>Each year there's a huge number of write-ups that need to be reviewed by the Counter Hack team. To find a good middle ground between preventing information overload and creating a write-up that can stand on its own as a learning resource, some parts, like the navigation tip below, are collapsed by default. Skipping over these will not take away from understanding the overall solution, but feel free to expand them to get some additional information.</p> Navigation tip <p>Even with less than 100 pages, there's still quite a bit of information to read through. To make things a little easier, you can use P or , to go to the previous section, N or . to navigate to the next section, and S, F, or / to open up the search dialog.</p> <p>TL;DR if you keep pressing N or . from this point forward, you'll hit all the content in the right order! </p>"},{"location":"#answers","title":"Answers","text":"<p>1. Holiday Hack Orientation - </p> <p>Follow Jingle Ringford's instructions to get your bearings at Geese Islands.</p> <p>2. Snowball Fight - </p> <p>Beat elfs and Santa at Snowball Fight by tinkering with client-side variables and parameters.</p> <p>3. Linux 101 - </p> <p>A super cool way to play around with computers is by getting to know Linux command-fu.</p> <p>4. Reportinator - </p> <p>Improve the quality of the ChatNPT-generated penetration testing report via the absolute hacker way or by reading with a keen eye.</p> <p>5. Azure 101 - </p> <p>Get to know Azure CLI while enumerating Goose Islands' IT infrastructure.</p> <p>6. Certificate SSHenanigans - </p> <p>gingerbread</p> <p>7. Active Directory - </p> <p>InstructionsForEnteringSatelliteGroundStation.txt</p> <p>8. Elf Hunt - </p> <p>Hunt down the elfs by tikering with JWT token and client-side variables.</p> <p>9. The Captain's Comms - </p> <p>Frequency: 10426 HZ Go-Date: 1224 Go-Time: 1200</p> <p>10. Faster Lock Combination - </p> <p>33 - 23 - 17 </p>"},{"location":"#conclusion","title":"Conclusion","text":"Story <p>Just sit right back and you\u2019ll hear a tale, A tale of a yuletide trip That started from a tropic port, Aboard this tiny ship Santa and his helpful elves To Geese Islands did go Continuing their merry work O'er sand instead of snow New this year: a shiny tool The elves logged in with glee What makes short work of many tasks? It's ChatNPT. It's ChatNPT From images to APIs This AI made elves glad But motivations were unknown So was it good or bad? Could it be that NPT Was not from off-the-shelf? Though we'll forgive and trust again We'd found a naughty elf This fancy AI tool of ours With all our work remained Not good or bad, our online friend Just did as it was trained Surely someone's taint must be Upon our AI crutch Yes indeed, this bold new world Bore Jack Frost's icy touch Though all's returned to steady state There's one thing that we know We'll all be needed once again When Santa's back on snow</p> <p></p>"},{"location":"bonus/","title":"BONUS!","text":"<p>List all the fun and whimsical Bonuses you found!</p>"},{"location":"easter_eggs/","title":"Easter Eggs","text":"<p>List all the fun and whimsical Easter Eggs you found!</p>"},{"location":"objectives/example1/","title":"Insert Objective 1 Title","text":"<p>Difficulty:  Direct link: Objective 1 terminal</p>"},{"location":"objectives/example1/#objective","title":"Objective","text":"<p>Request</p> <p>Insert the objective description from your badge.</p> Insert Elf Name <p>Copy the first part of the conversation with Elf Name here You can use <code>&lt;br/&gt;</code> to ensure each sentence starts on a new line.</p>"},{"location":"objectives/example1/#hints","title":"Hints","text":"Insert Hint 1 Title <p>Along the way you will receive different hints. Insert them here.</p> Insert Hint 2 Title <p>Along the way you will receive different hints. Insert them here.</p>"},{"location":"objectives/example1/#solution","title":"Solution","text":"<p>This section explains the different steps taken to solve the challenge. Try to find a good balance between providing sufficient detail and not overloading the reader with too much information. Use admonitions, images, diagrams, code blocks, and tables to highlight and structure important information or provide additional clarification.</p>"},{"location":"objectives/example1/#admonitions","title":"Admonitions","text":"<p>Anchor the decorations</p> <p>Ensure that all festive decorations, especially electrical ones, are securely anchored. We don\u2019t want them floating off into the tropical sunset!</p> <p>Palm tree lighting tip</p> <p>While on the island, make sure to hang your Christmas lights on a palm tree. It\u2019s not only festive but also a great beacon for Santa to find you!</p>"},{"location":"objectives/example1/#images","title":"Images","text":""},{"location":"objectives/example1/#diagrams","title":"Diagrams","text":"<pre><code>sequenceDiagram\n  autonumber\n  Santa-&gt;&gt;Elf: Hey Elf, is the Naughty-or-Nice List secured?\n  loop Security Check\n      Elf-&gt;&gt;Elf: Ensuring list is encrypted\n  end\n  Note right of Elf: Using candy-cane encryption!\n  Elf--&gt;&gt;Santa: Safe and sound, Santa!\n  Santa-&gt;&gt;Reindeer: Rudolph, did you patch the sleigh's software?\n  Note left of Reindeer: Checking for reindeerOS updates...\n  Reindeer--&gt;&gt;Santa: All patched and glowing bright!</code></pre>"},{"location":"objectives/example1/#code-blocks","title":"Code blocks","text":"Countdown script (with line 7 highlighted)<pre><code>#!/bin/bash\necho \"Christmas Holiday Countdown\"\n\ndays_until_xmas=$(($(date -d \"Dec 25\" +%j) - $(date +%j)))\n\nif [ $days_until_xmas -ge 0 ]; then\n  echo \"Only $days_until_xmas days until Christmas!\"\nelse\n  echo \"Christmas has passed! Hope you had a great time!\"\nfi\n</code></pre>"},{"location":"objectives/example1/#tables","title":"Tables","text":"Activity Santa's Verdict Elf Comments Iceberg Surfing Risky Business \"Lost three surfboards!\" Polar Bear Hugs Approach with Caution \"Fluffy but... brisk.\" Snow Fort Building Highly Recommended \"Elf-sized doorways only.\" Aurora Light Chasing Magical Experience \"Better than Christmas lights!\" Penguin Parade Absolute Must-See \"They're oddly organized!\" <p>Answer</p> <p>Insert the answer to the objective here.</p>"},{"location":"objectives/example1/#response","title":"Response","text":"<p>Insert Elf Name</p> <p>Copy the final part of the conversation with Elf Name here.</p>"},{"location":"objectives/example2/","title":"Insert Objective 2 Title","text":"<p>Difficulty:  Direct link: Objective 2 website</p>"},{"location":"objectives/example2/#objective","title":"Objective","text":"<p>Request</p> <p>Insert the objective description from your badge.</p> Insert Elf Name <p>Copy the first part of the conversation with Elf Name here You can use <code>&lt;br/&gt;</code> to ensure each sentence starts on a new line.</p>"},{"location":"objectives/example2/#hints","title":"Hints","text":"Insert Hint 1 Title <p>Along the way you will receive different hints. Insert them here.</p> Insert Hint 2 Title <p>Along the way you will receive different hints. Insert them here.</p>"},{"location":"objectives/example2/#solution","title":"Solution","text":"<p>This section explains the different steps taken to solve the challenge. Try to find a good balance between providing sufficient detail and not overloading the reader with too much information. Use admonitions, images, diagrams, code blocks, and tables to highlight and structure important information or provide additional clarification.</p>"},{"location":"objectives/example2/#admonitions","title":"Admonitions","text":"<p>Anchor the decorations</p> <p>Ensure that all festive decorations, especially electrical ones, are securely anchored. We don\u2019t want them floating off into the tropical sunset!</p> <p>Palm tree lighting</p> <p>While on the island, make sure to hang your Christmas lights on a palm tree. It\u2019s not only festive but also a great beacon for Santa to find you!</p>"},{"location":"objectives/example2/#images","title":"Images","text":""},{"location":"objectives/example2/#diagrams","title":"Diagrams","text":"<pre><code>sequenceDiagram\n  autonumber\n  Santa-&gt;&gt;Elf: Hey Elf, is the Naughty-or-Nice List secured?\n  loop Security Check\n      Elf-&gt;&gt;Elf: Ensuring list is encrypted\n  end\n  Note right of Elf: Using candy-cane encryption!\n  Elf--&gt;&gt;Santa: Safe and sound, Santa!\n  Santa-&gt;&gt;Reindeer: Rudolph, did you patch the sleigh's software?\n  Note left of Reindeer: Checking for reindeerOS updates...\n  Reindeer--&gt;&gt;Santa: All patched and glowing bright!</code></pre>"},{"location":"objectives/example2/#code-blocks","title":"Code blocks","text":"Countdown script (with line 7 highlighted)<pre><code>#!/bin/bash\necho \"Christmas Holiday Countdown\"\n\ndays_until_xmas=$(($(date -d \"Dec 25\" +%j) - $(date +%j)))\n\nif [ $days_until_xmas -ge 0 ]; then\n  echo \"Only $days_until_xmas days until Christmas!\"\nelse\n  echo \"Christmas has passed! Hope you had a great time!\"\nfi\n</code></pre>"},{"location":"objectives/example2/#tables","title":"Tables","text":"Activity Santa's Verdict Elf Comments Iceberg Surfing Risky Business \"Lost three surfboards!\" Polar Bear Hugs Approach with Caution \"Fluffy but... brisk.\" Snow Fort Building Highly Recommended \"Elf-sized doorways only.\" Aurora Light Chasing Magical Experience \"Better than Christmas lights!\" Penguin Parade Absolute Must-See \"They're oddly organized!\" <p>Answer</p> <p>Insert the answer to the objective here.</p>"},{"location":"objectives/example2/#response","title":"Response","text":"<p>Insert Elf Name</p> <p>Copy the final part of the conversation with Elf Name here.</p>"},{"location":"objectives/example3/","title":"Insert Objective 3 Title","text":"<p>Difficulty:  Direct link: Objective 3 terminal</p>"},{"location":"objectives/example3/#objective","title":"Objective","text":"<p>Request</p> <p>Insert the objective description from your badge.</p> Insert Elf Name <p>Copy the first part of the conversation with Elf Name here You can use <code>&lt;br/&gt;</code> to ensure each sentence starts on a new line.</p>"},{"location":"objectives/example3/#hints","title":"Hints","text":"Insert Hint 1 Title <p>Along the way you will receive different hints. Insert them here.</p> Insert Hint 2 Title <p>Along the way you will receive different hints. Insert them here.</p>"},{"location":"objectives/example3/#solution","title":"Solution","text":"<p>This section explains the different steps taken to solve the challenge. Try to find a good balance between providing sufficient detail and not overloading the reader with too much information. Use admonitions, images, diagrams, code blocks, and tables to highlight and structure important information or provide additional clarification.</p>"},{"location":"objectives/example3/#admonitions","title":"Admonitions","text":"<p>Anchor the decorations</p> <p>Ensure that all festive decorations, especially electrical ones, are securely anchored. We don\u2019t want them floating off into the tropical sunset!</p> <p>Palm tree lighting</p> <p>While on the island, make sure to hang your Christmas lights on a palm tree. It\u2019s not only festive but also a great beacon for Santa to find you!</p>"},{"location":"objectives/example3/#images","title":"Images","text":""},{"location":"objectives/example3/#diagrams","title":"Diagrams","text":"<pre><code>sequenceDiagram\n  autonumber\n  Santa-&gt;&gt;Elf: Hey Elf, is the Naughty-or-Nice List secured?\n  loop Security Check\n      Elf-&gt;&gt;Elf: Ensuring list is encrypted\n  end\n  Note right of Elf: Using candy-cane encryption!\n  Elf--&gt;&gt;Santa: Safe and sound, Santa!\n  Santa-&gt;&gt;Reindeer: Rudolph, did you patch the sleigh's software?\n  Note left of Reindeer: Checking for reindeerOS updates...\n  Reindeer--&gt;&gt;Santa: All patched and glowing bright!</code></pre>"},{"location":"objectives/example3/#code-blocks","title":"Code blocks","text":"Countdown script (with line 7 highlighted)<pre><code>#!/bin/bash\necho \"Christmas Holiday Countdown\"\n\ndays_until_xmas=$(($(date -d \"Dec 25\" +%j) - $(date +%j)))\n\nif [ $days_until_xmas -ge 0 ]; then\n  echo \"Only $days_until_xmas days until Christmas!\"\nelse\n  echo \"Christmas has passed! Hope you had a great time!\"\nfi\n</code></pre>"},{"location":"objectives/example3/#tables","title":"Tables","text":"Activity Santa's Verdict Elf Comments Iceberg Surfing Risky Business \"Lost three surfboards!\" Polar Bear Hugs Approach with Caution \"Fluffy but... brisk.\" Snow Fort Building Highly Recommended \"Elf-sized doorways only.\" Aurora Light Chasing Magical Experience \"Better than Christmas lights!\" Penguin Parade Absolute Must-See \"They're oddly organized!\" <p>Answer</p> <p>Insert the answer to the objective here.</p>"},{"location":"objectives/example3/#response","title":"Response","text":"<p>Insert Elf Name</p> <p>Copy the final part of the conversation with Elf Name here.</p>"},{"location":"objectives/example4/","title":"Insert Objective 4 Title","text":"<p>Difficulty:  Direct link: Objective 4 website</p>"},{"location":"objectives/example4/#objective","title":"Objective","text":"<p>Request</p> <p>Insert the objective description from your badge.</p> Insert Elf Name <p>Copy the first part of the conversation with Elf Name here You can use <code>&lt;br/&gt;</code> to ensure each sentence starts on a new line.</p>"},{"location":"objectives/example4/#hints","title":"Hints","text":"Insert Hint 1 Title <p>Along the way you will receive different hints. Insert them here.</p> Insert Hint 2 Title <p>Along the way you will receive different hints. Insert them here.</p>"},{"location":"objectives/example4/#solution","title":"Solution","text":"<p>This section explains the different steps taken to solve the challenge. Try to find a good balance between providing sufficient detail and not overloading the reader with too much information. Use admonitions, images, diagrams, code blocks, and tables to highlight and structure important information or provide additional clarification.</p>"},{"location":"objectives/example4/#admonitions","title":"Admonitions","text":"<p>Anchor the decorations</p> <p>Ensure that all festive decorations, especially electrical ones, are securely anchored. We don\u2019t want them floating off into the tropical sunset!</p> <p>Palm tree lighting</p> <p>While on the island, make sure to hang your Christmas lights on a palm tree. It\u2019s not only festive but also a great beacon for Santa to find you!</p>"},{"location":"objectives/example4/#images","title":"Images","text":""},{"location":"objectives/example4/#diagrams","title":"Diagrams","text":"<pre><code>sequenceDiagram\n  autonumber\n  Santa-&gt;&gt;Elf: Hey Elf, is the Naughty-or-Nice List secured?\n  loop Security Check\n      Elf-&gt;&gt;Elf: Ensuring list is encrypted\n  end\n  Note right of Elf: Using candy-cane encryption!\n  Elf--&gt;&gt;Santa: Safe and sound, Santa!\n  Santa-&gt;&gt;Reindeer: Rudolph, did you patch the sleigh's software?\n  Note left of Reindeer: Checking for reindeerOS updates...\n  Reindeer--&gt;&gt;Santa: All patched and glowing bright!</code></pre>"},{"location":"objectives/example4/#code-blocks","title":"Code blocks","text":"Countdown script (with line 7 highlighted)<pre><code>#!/bin/bash\necho \"Christmas Holiday Countdown\"\n\ndays_until_xmas=$(($(date -d \"Dec 25\" +%j) - $(date +%j)))\n\nif [ $days_until_xmas -ge 0 ]; then\n  echo \"Only $days_until_xmas days until Christmas!\"\nelse\n  echo \"Christmas has passed! Hope you had a great time!\"\nfi\n</code></pre>"},{"location":"objectives/example4/#tables","title":"Tables","text":"Activity Santa's Verdict Elf Comments Iceberg Surfing Risky Business \"Lost three surfboards!\" Polar Bear Hugs Approach with Caution \"Fluffy but... brisk.\" Snow Fort Building Highly Recommended \"Elf-sized doorways only.\" Aurora Light Chasing Magical Experience \"Better than Christmas lights!\" Penguin Parade Absolute Must-See \"They're oddly organized!\" <p>Answer</p> <p>Insert the answer to the objective here.</p>"},{"location":"objectives/example4/#response","title":"Response","text":"<p>Insert Elf Name</p> <p>Copy the final part of the conversation with Elf Name here.</p>"},{"location":"objectives/example5/","title":"Insert Objective 5 Title","text":"<p>Difficulty:  Direct link: Objective5.zip</p>"},{"location":"objectives/example5/#objective","title":"Objective","text":"<p>Request</p> <p>Insert the objective description from your badge.</p> Insert Elf Name <p>Copy the first part of the conversation with Elf Name here You can use <code>&lt;br/&gt;</code> to ensure each sentence starts on a new line.</p>"},{"location":"objectives/example5/#hints","title":"Hints","text":"Insert Hint 1 Title <p>Along the way you will receive different hints. Insert them here.</p> Insert Hint 2 Title <p>Along the way you will receive different hints. Insert them here.</p>"},{"location":"objectives/example5/#solution","title":"Solution","text":"<p>This section explains the different steps taken to solve the challenge. Try to find a good balance between providing sufficient detail and not overloading the reader with too much information. Use admonitions, images, diagrams, code blocks, and tables to highlight and structure important information or provide additional clarification.</p>"},{"location":"objectives/example5/#admonitions","title":"Admonitions","text":"<p>Anchor the decorations</p> <p>Ensure that all festive decorations, especially electrical ones, are securely anchored. We don\u2019t want them floating off into the tropical sunset!</p> <p>Palm tree lighting</p> <p>While on the island, make sure to hang your Christmas lights on a palm tree. It\u2019s not only festive but also a great beacon for Santa to find you!</p>"},{"location":"objectives/example5/#images","title":"Images","text":""},{"location":"objectives/example5/#diagrams","title":"Diagrams","text":"<pre><code>sequenceDiagram\n  autonumber\n  Santa-&gt;&gt;Elf: Hey Elf, is the Naughty-or-Nice List secured?\n  loop Security Check\n      Elf-&gt;&gt;Elf: Ensuring list is encrypted\n  end\n  Note right of Elf: Using candy-cane encryption!\n  Elf--&gt;&gt;Santa: Safe and sound, Santa!\n  Santa-&gt;&gt;Reindeer: Rudolph, did you patch the sleigh's software?\n  Note left of Reindeer: Checking for reindeerOS updates...\n  Reindeer--&gt;&gt;Santa: All patched and glowing bright!</code></pre>"},{"location":"objectives/example5/#code-blocks","title":"Code blocks","text":"Countdown script (with line 7 highlighted)<pre><code>#!/bin/bash\necho \"Christmas Holiday Countdown\"\n\ndays_until_xmas=$(($(date -d \"Dec 25\" +%j) - $(date +%j)))\n\nif [ $days_until_xmas -ge 0 ]; then\n  echo \"Only $days_until_xmas days until Christmas!\"\nelse\n  echo \"Christmas has passed! Hope you had a great time!\"\nfi\n</code></pre>"},{"location":"objectives/example5/#tables","title":"Tables","text":"Activity Santa's Verdict Elf Comments Iceberg Surfing Risky Business \"Lost three surfboards!\" Polar Bear Hugs Approach with Caution \"Fluffy but... brisk.\" Snow Fort Building Highly Recommended \"Elf-sized doorways only.\" Aurora Light Chasing Magical Experience \"Better than Christmas lights!\" Penguin Parade Absolute Must-See \"They're oddly organized!\" <p>Answer</p> <p>Insert the answer to the objective here.</p>"},{"location":"objectives/example5/#response","title":"Response","text":"<p>Insert Elf Name</p> <p>Copy the final part of the conversation with Elf Name here.</p>"},{"location":"objectives/o1/","title":"Holiday Hack Orientation","text":"<p>Difficulty:  Direct link: Orientation terminal</p>"},{"location":"objectives/o1/#objective","title":"Objective","text":"<p>Request</p> <p>Talk to Jingle Ringford on Christmas Island and get your bearings at Geese Islands</p> <p></p> Jingle Ringford @Orientation <p>Welcome to the Geese Islands and the 2023 SANS Holiday Hack Challenge! I'm Jingle Ringford, one of Santa's many elves. Santa asked me to meet you here and give you a short orientation to this festive event. Before you head back to your boat, I'll ask you to accomplish a few simple tasks. First things first, here's your badge! It's that starfish in the middle of your avatar. Great - now you're official! Click on the badge on your avatar. That's where you will see your Objectives, Hints, and Conversations for the Holiday Hack Challenge. We've also got handy links to some awesome talks and more there for you!</p>"},{"location":"objectives/o1/#solution","title":"Solution","text":"<p>For the first challenge, simply click on the starfish in the middle of your avatar and look through the available menus.</p> <p>Jingle Ringford  @Orientation</p> <p>Next, pick up that fishing pole over there in the sand. That will come in handy when you're sailing around the islands.</p> <p>Now just click on the Fishing Pole by the sea and it becomes available in the inventory.  Indeed this should be handy later on, we are at sea after all. ;)</p> <p></p> <p>Now check back with JR.</p> <p>Jingle Ringford @Orientation</p> <p>Fantastic! OK, one last thing. Click on the Cranberry Pi Terminal and follow the on-screen instructions.</p> <p>To solve this, click the terminal and type out requested \"answer\". Simple enough. </p> <p>Answer</p> <p>answer</p>"},{"location":"objectives/o1/#response","title":"Response","text":"<p>Jingle Ringford  @Orientation</p> <p>Perfect! Your orientation is now complete! Head back to your boat or click on the anchor icon on the left of the screen to set sail for Frosty's Beach where Santa's waiting for you. I've updated your boat's compass to guide the way. As you sail to each island, talk to the goose of that island to receive a colorful lei festooning the masts on your ship. Safe travels my friend and remember, relax, enjoy the sun, and most importantly, have FUN!</p> <p>Let's get going! All aboard, sailing to Frosty's Beach...</p>"},{"location":"objectives/o10/","title":"Faster Lock Combination","text":"<p>Difficulty:  Direct link: Faster Lock Combination terminal</p>"},{"location":"objectives/o10/#objective","title":"Objective","text":"<p>Request</p> <p>Over on Steampunk Island, Bow Ninecandle is having trouble opening a padlock. Do some research and see if you can help open it!</p> <p></p> Bow Ninecandle @Brass Bouy Port <p>Hey there! I'm Bow Ninecandle, and I've got a bit of a... 'pressing' situation. You see, I need to get into the lavatory, but here's the twist: it's secured with a combination padlock. Talk about bad timing, right? I could really use your help to figure this out before things get... well, urgent. I'm sure there are some clever tricks and tips floating around the web that can help us crack this code without too much of a flush... I mean fuss. Remember, we're aiming for quick and easy solutions here - nothing too complex. Once we've gathered a few possible combinations, let's team up and try them out. I'm crossing my legs - I mean fingers - hoping we can unlock this door soon. After all, everyone knows that the key to holiday happiness is an accessible lavatory! Let's dive into this challenge and hopefully, we won't have to 'hold it' for too long! Ready to help me out?</p>"},{"location":"objectives/o10/#solution","title":"Solution","text":"<p>This challenge is about lock picking the old school high school locker.</p> <p></p> <p>Watching the video tutorial is a must! From this video, you learn that there are 3 main steps to cracking the combination. Step 1: Finding the sticky number Reset the lock, put tension on the locker (brown) and rotate until it starts to seize up. Do this multiple times until you are hitting the same number over and over. My sticky number is 28.</p> <p>Step 2: Finding the guess numbers These 2 numbers lie between 0 and 11. Apply heavy tension (red) and start turing from going one number at at time from 0 to 11. The two numbers you want to find in this range sit in between numbers. For my lock, the two guess numbers are 4 and 7.</p> <p>Step 3: The Math PART A: Finding the First Digit 28 (sticky) + 5 = 33 (first digit)</p> <p>PART B: Finding the Third Digit 33 (first digit) / 4 = 8 with remainder of 1. Guess numbers: 4 and 7 4 14 24 34 7 17 27 37 Dividing each number by 4 to match the same remainder of 1 as above leaves me 17 and 37. After refinement, my third digit is 17 (because it's looser)</p> <p>PART C: Finding the Second Digit (8 possibilities) Cross out numbers within 2 of third digit (17) 3 11 19 27 35 7 15 23 31 39</p> <p>Possible combinations for my lock are: 33 - 3/11/27/35/7/23/31/39 - 17</p> <p>Answer</p> <p>33 - 23 - 17 </p>"},{"location":"objectives/o10/#response","title":"Response","text":"<p>Bow Ninecandle @Brass Bouy Port</p> <p>Oh, thank heavens! You're a lifesaver! With your knack for cracking codes, we've just turned a potential 'loo catastrophe' into a holiday triumph!</p> <p>Portable shed cracked open, catastrophe averted!</p>"},{"location":"objectives/o11/","title":"Game Cartridges: Vol 1","text":"<p>Difficulty:  Direct link: Game Cartridges: Vol 1 game</p>"},{"location":"objectives/o11/#objective","title":"Objective","text":"<p>Request</p> <p>Find the first Gamegosling cartridge and beat the game</p> <p></p> Dusty Giftwrap @Tarnished Trove <p>Arrr, matey, shiver me timbers! There be buried treasure herrrrre. Just kidding, I'm not really a pirate, I was just hoping it would make finding the treasure easier. I guess you heard about the fabled buried treasure, too? I didn't expect to see anyone else here. This uncharted islet was hard to find. I bet one of these creepy toys has the treasure, and I'm sure not going anywhere near them! If you find the treasure, come back and show me, and I'll tell you what I was able to research about it. Good luck!</p> Dusty Giftwrap @Tarnished Trove <p>Whoa, you found it! It's a... video game cartridge? Coooooollll... I mean, arrrrrr.... So, here's what my research uncovered. Not sure what it all means, maybe you can make sense of it. You have all three? I think that makes you ruler of the pirates!</p>"},{"location":"objectives/o11/#hints","title":"Hints","text":"Gameboy 1 <p>From: Dusty Giftwrap Objective: Game Cartridges: Vol 1 Listen for the gameboy cartridge detector's proximity sound that activates when near buried treasure. It may be worth checking around the strange toys in the Tarnished Trove.</p> Gameboy 1 <p>From: Dusty Giftwrap Objective: Game Cartridges: Vol 1 1) Giving things a little push never hurts. 2) Out of sight but not out of ear-shot 3) You think you fixed the QR code? Did you scan it and see where it leads?</p> <p>The Game Boy Cartridge Detector comes in handy for finding games: </p>"},{"location":"objectives/o11/#solution","title":"Solution","text":"<p>This challenge starts off a 3-part series of GameBoy hacking. After playing the game once normally, the goal is clear - you need to put together a QR code by moving individual blocks into their designated locations one by one. There are a couple of hints along the way. One mentions the game looking disastrously bad:</p> <p></p> <p>And the other one said something along the lines of \"if I find the developer who skipped out on assets for this game!\" \ud83d\ude02</p> <p></p> <p>Thanks for the observations, let's see the source code using Chrome Dev Tools. The most interesting file relevant to the game is script.js which contains game assignments.</p> <p></p> <p>Some of the most interesting assignments are found here - undocumented game keys which will be very useful. The palette can be changed with \"]\" and \"[\" as well as backspace can be used to rewind. This is very helpful considering that you need to move 7 blocks to the correct positions and you can normally only move blocks forward and if you mess up, you  have to start over.</p> <p></p> <p>The different palette is also super helpful - you can find one that automatically shows movable blocks without playing music.</p> <p></p> <p>Ok now that game dynamics are improved, all 7 blocks just have to be move to their spot. Once they are all in place, scan the QR code, which leads to website with the flag.</p> <p></p> <p>Answer</p> <p>santaconfusedgivingplanetsqrcode</p> <p>Game 1 of 3 complete!</p>"},{"location":"objectives/o12/","title":"Game Cartridges: Vol 2","text":"<p>Difficulty:  Direct link: Game Cartridges: Vol 2 game</p>"},{"location":"objectives/o12/#objective","title":"Objective","text":"<p>Request</p> <p>Find the second Gamegosling cartridge and beat the game</p> <p></p> Tinsel Upatree @Driftbit Grotto <p>I can't believe I was actually able to find this underground cavern! I discovered what looked liike an old pirate map in the attic of one of those huts in Rainraster Cliffs, and it actually led somewhere! But now that I've seen where it leads, I think this might've been a bad idea. This place is scary! Maybe you want to take it from here? I'm sure that cartridge is right nearby. Start walking around! Once you run into it, check back with me and I'll tell you what I know about winning. Good luck! Whoa, you found it! What version is it? Did you know that many games had multiple versions released? Word is: volume 2 has 2 versions!</p>"},{"location":"objectives/o12/#hints","title":"Hints","text":"Gameboy 2 <p>From: Tinsel Upatree Objective: Game Cartridges: Vol 2 Try poking around Pixel Island. There really aren't many places you can go here, so try stepping everywhere and see what you get!</p> Gameboy 2 <p>From: Tinsel Upatree Objective: Game Cartridges: Vol 2 1) This feels the same, but different! 2) If it feels like you are going crazy, you probably are! Or maybe, just maybe, you've not yet figured out where the hidden ROM is hiding. 3) I think I may need to get a DIFFerent perspective. 4) I wonder if someone can give me a few pointers to swap.</p>"},{"location":"objectives/o12/#solution","title":"Solution","text":"<p>Answer</p>"},{"location":"objectives/o12/#response","title":"Response","text":"<p>Tinsel Upatree @Driftbit Grotto</p>"},{"location":"objectives/o13/","title":"Game Cartridges: Vol 3","text":"<p>Difficulty:  Direct link: Game Cartridges: Vol 3 game</p>"},{"location":"objectives/o13/#objective","title":"Objective","text":"<p>Request</p> <p>Find the third Gamegosling cartridge and beat the game</p> <p></p> Angel Candysalt @Rusty Quay <p>The name's Angel Candysalt, the great treasure hunter! A euphemism? No, why do people always ask me that?? Anyways, I came here to nab the treasure hidden in this ship graveyard, only to discover it's protected by this rusted maze. That must be why all these old ships are here. Their crew came to find the treasure, only to get lost in the labrynth.</p> Angel Candysalt @Rusty Quay <p>There are 3 buried treasures in total, each in its own uncharted area around Geese Islands. I've been getting lost in this maze for hours now with no luck, and my feet are starting to get sore. Maybe you'll be able to find the way through. Here, use my Gameboy Cartridge Detector. Go into your items and test it to make sure it's still working. When you get close to the treasure, it'll start sounding off. The closer you get, the louder the sound. No need to activate or fiddle with it. It just works! At least it's obvious where this one is. See that shiny spot over to the right? That's gotta be where it is! If only I had a bird's eye view. But how to get there? Up? Down? Left? Right? Oh well, that's your problem now! Come back if you can find your way to it, and I'll tell you some secrets I've heard about this one.</p>"},{"location":"objectives/o13/#hints","title":"Hints","text":"Gameboy 3 <p>From: Angel Candysalt Objective: Game Cartridges: Vol 3 1) This one is a bit long, it never hurts to save your progress! 2) 8bit systems have much smaller registers than you\u2019re used to. 3) Isn\u2019t this great?!? The coins are OVERFLOWing in their abundance.</p>"},{"location":"objectives/o13/#solution","title":"Solution","text":"<p>Answer</p>"},{"location":"objectives/o13/#response","title":"Response","text":"<p>Angel Candysalt @Rusty Quay</p>"},{"location":"objectives/o16/","title":"Linux PrivEsc","text":"<p>Difficulty:  Direct link: Orientation terminal</p>"},{"location":"objectives/o16/#objective","title":"Objective","text":"<p>Request</p> <p>Rosemold is in Ostrich Saloon on the Island of Misfit Toys. Give her a hand with escalation for a tip about hidden islands.</p> <p></p> Rose Mold @Ostrich Saloon <p>What am I doing in this saloon? The better question is: what planet are you from? Yes, I\u2019m a troll from the Planet Frost. I decided to stay on Earth after Holiday Hack 2021 and live among the elves because I made such dear friends here. Whatever. Do you know much about privilege escalation techniques on Linux? You're asking why? How about I'll tell you why after you help me. And you might have to use that big brain of yours to get creative, bub.</p>"},{"location":"objectives/o16/#hints","title":"Hints","text":"Linux Privilege Escalation Techniques <p>From: Rose Mold Terminal: Linux PrivESC There's various ways to escalate privileges on a Linux system.</p> Linux Command Injection <p>From: Rose Mold Terminal: Linux PrivESC Use the privileged binary to overwriting a file to escalate privileges could be a solution, but there's an easier method if you pass it a crafty argument.</p>"},{"location":"objectives/o16/#solution","title":"Solution","text":"<p>Answer</p>"},{"location":"objectives/o16/#response","title":"Response","text":"<p>Rose Mold @Ostrich Saloon</p>"},{"location":"objectives/o2/","title":"Snowball Fight","text":"<p>Difficulty:  Direct link: Snowball Hero terminal</p>"},{"location":"objectives/o2/#objective","title":"Objective","text":"<p>Request</p> <p>Visit Christmas Island and talk to Morcel Nougat about this great new game. Team up with another player and show Morcel how to win against Santa!</p> Goose of Christmas Island @Frosty's Beach <p>Honk honk</p> Santa @Frosty's Beach <p>Welcome to the Geese Islands, fellow traveler! This one is called Christmas Island. Nooo ho ho, not that Christmas Island. After countless years of shivering and shaking through each holiday season, I thought to myself, \"Why not trade the snowflakes for sunbeams, just once?\" Oh, the North Pole has its charm, but the bones do yearn for a bit of warmth now and then. The notion was suggested by my good friend, Chat North Pole Technology, or as we like to call it, 'ChatNPT'. That's the one we use, but there's a whole slew of other AI platforms. You should try them out! It came to me describing palm trees and gentle waves, saying, \"Santa, let your holidays take flight to Geese Islands, where the warmth isn't just a setting.\" \"There, every day is a sunny scene straight out of a vintage film reel.\" I chuckled at the thought, my belly shaking like a bowl full of jelly. But the AI persisted, \"Winter's best kept secret: the balmy breezes of Geese Islands!\" And I must confess, the sound of that did stroke my beard with curiosity. So, I called a meeting with the elves, the reindeer, and Mrs. Claus, of course.The elves were all a-buzz with the idea of crafting toys with a view of the ocean! Thus, we packed up our sleighs and ChatNPT charted a course for the Geese Islands, a tropical paradise just north of the equator.. And I must say, there's something quite magical about a Christmas carol sung to the strum of a ukulele. After all, the magic of the holidays isn't in the snow or the cold, but in the love and the care that we put into each and every gift. So here's to trying new things, to following the sunshine, and to the Geese Islands, where the holiday cheer is sun-kissed and the Christmas spirit is as warm as the tropical breeze. And it's all thanks to a little nudge from ChatNPT. Now, why not start off your vacation with a snowball fight with Morcel, or check out my surf shack on the other end of the beach? However you decide to relax, be sure to soak in all the whimsical beauty of these magical islands, and enjoy the activities to the fullest!</p>"},{"location":"objectives/o2/#hints","title":"Hints","text":"Synthesis is the True Ending <p>From: Santa The AI revolution has begun. Some of the most prominent and useful tools born from the advent of powerful AI include ChatGPT, PlayHT, Midjourney, Dall-E 3, Bing AI, and Bard, and Grok.</p> Snowball Super Hero <p>From: Morcel Nougat Terminal: Snowball Hero Its easiest to grab a friend play with and beat Santa but tinkering with client-side variables can grant you all kinds of snowball fight super powers. You could even take on Santa and the elves solo!</p> Consoling iFrames <p>From: Morcel Nougat Terminal: Snowball Hero Have an iframe in your document? Be sure to select the right context before meddling with JavaScript.</p> <p>Based on Santa's story and the first hint, it is clear what will be the theme of this year's Holiday Hack Challenge. </p> <p>Walking past Santa, this seems like the most appropriate time to check out vendor booths.</p> <p></p> Vendor Booths <p>HHC2023 Swag Amazon Security SANS.edu Microsoft including KC7 and Kusto Detective Agency Google President's Cup Cybersecurity Competition Hack Space Con</p> <p></p> Morcel Nougat @Frosty's Beach <p>Hey there, I'm Morcel Nougat, elf extraordinaire! You won't believe this, but we're on a magical tropical island called Christmas Island, and it even has snow! I'm so glad ChatNPT suggested we come here this year! Santa, some elves, and I are having a snowball fight, and we'd love you to join us. Santa's really good, so trust me when I say it's way more fun when played with other people. But hey, if you can figure out a way to play solo by tinkering with client side variables or parameters to go solo mode, go for it! There's also ways to make the elves' snowballs do no damage, and all kinds of other shenanigans, but you didn't hear that from me. Just remember, it's all about having fun and sharing the joy of the holiday season with each other. So, are you in? We'd really love your company in this epic snowball battle!</p>"},{"location":"objectives/o2/#solution","title":"Solution","text":"<p>To solve this challenge, first play the game normally (Random Match Making) observing network traffic using Chrome Dev Tools. Static content aside, the following request stands out. This URL has an interesting parameter \"singlePlayer\" which is set to false (singlePlayer=false).  </p> <p>Next, read through the game's JavaScript file in Dev Tools' Sources tab and find where URL with its parameters is being built. As this URL is built, window's location is then assigned to it. Close and restart the game but don't start matchmaking yet - stay in lobby. Set a breakpoint at this assignment (line 81) so you could manipulate the URL.</p> <p></p> <p>Now start Random Match Making - your action will pause as the JS breakpoint is hit. You can now print the URL to the console and modify it to set singlePlayer to true.</p> <p></p> <p>Now that URL is modified, resume script execution. Powerful \"Elf the Dwarf\" appears as my partner, holding none other than snowball shotgun with big sprrrreeead. At this point victory is imminent and all that's needed is to shoot every elf and Santa.</p> <p></p> <p>Answer</p> <p>Elf the Dwarf saves the day! </p>"},{"location":"objectives/o2/#response","title":"Response","text":"<p>Morcel Nougat @Frosty's Beach</p> <p>You're like a snowball fighting ninja! A real-life legend. Can I have your autograph!?</p> <p>Next up we need to pay a visit to Ginger Breddie in Santa's Shack...</p>"},{"location":"objectives/o3/","title":"Linux 101","text":"<p>Difficulty:  Direct link: Linux 101 terminal</p>"},{"location":"objectives/o3/#objective","title":"Objective","text":"<p>Request</p> <p>Visit Ginger Breddie in Santa's Shack on Christmas Island to help him with some basic Linux tasks. It's in the southwest corner of Frosty's Beach.</p> <p></p> Ginger Breddie @Santa's Surf Shack <p>Hey, welcome to Santa's Surf Shack on tropical Christmas Island! I'm just hanging ten here, taking it easy while brushing up on my Linux skills. You ever tried getting into Linux? It's a super cool way to play around with computers. Can you believe ChatNPT suggested this trip to the Geese Islands this year? I'm so thrilled! Kudos to ChatNPT, eh? The sunshine, the waves, and my surfboard \u2013 simply loving it! So, what do you have planned? Care to join me in a Linux session?</p>"},{"location":"objectives/o3/#solution","title":"Solution","text":"Welcome message <p>The North Pole \ud83c\udf81 Present Maker: All the presents on this system have been stolen by trolls. Capture trolls by following instructions here and \ud83c\udf81's will appear in the green bar below. Run the command \"hintme\" to receive a hint.</p>"},{"location":"objectives/o3/#question-1","title":"Question 1","text":"<p>Question</p> <p>Perform a directory listing of your home directory to find a troll and retrieve a present!</p> <p>To list directories in Linux, it's simply <code>ls</code>.</p> <p></p> <p>Answer</p> <p>ls</p>"},{"location":"objectives/o3/#question-2","title":"Question 2","text":"<p>Question</p> <p>Now find the troll inside the troll.</p> <p>To find the troll, simply read the troll file with <code>cat</code>.</p> <p></p> <p>Answer</p> <p>cat troll_19315479765589239</p>"},{"location":"objectives/o3/#question-3","title":"Question 3","text":"<p>Question</p> <p>Great, now remove the troll in your home directory.</p> <p>To remove file, run <code>rm</code> on it.</p> <p></p> <p>Answer</p> <p>rm troll_19315479765589239</p>"},{"location":"objectives/o3/#question-4","title":"Question 4","text":"<p>Question</p> <p>Print the present working directory using a command.</p> <p>To get the current working directory, run <code>pwd</code>.</p> <p></p> <p>Answer</p> <p>pwd</p>"},{"location":"objectives/o3/#question-5","title":"Question 5","text":"<p>Question</p> <p>Good job but it looks like another troll hid itself in your home directory. Find the hidden troll!</p> <p>To list hidden files/folders, use <code>ls -a</code> which will list ALL files/folders. <code>-l</code> switch makes it look nicer but not required.</p> <p></p> <p>Answer</p> <p>ls -a</p>"},{"location":"objectives/o3/#question-6","title":"Question 6","text":"<p>Question</p> <p>Excellent, now find the troll in your command history.</p> <p>Run <code>history</code> to get history of commands and pipe its output to input of <code>grep</code> which will search for <code>-i</code> (case-insensitive) word <code>troll</code>.</p> <p></p> <p>Answer</p> <p>history | grep -i troll</p>"},{"location":"objectives/o3/#question-7","title":"Question 7","text":"<p>Question</p> <p>Find the troll in your environment variables.</p> <p>Command <code>env</code> outputs all environment variables for the current user - pipe its output to grep to find the troll.</p> <p></p> <p>Answer</p> <p>env | grep -i troll</p>"},{"location":"objectives/o3/#question-8","title":"Question 8","text":"<p>Question</p> <p>Next, head into the workshop.</p> <p>Simply <code>cd</code> to change directory</p> <p></p> <p>Answer</p> <p>cd workshop</p>"},{"location":"objectives/o3/#question-9","title":"Question 9","text":"<p>Question</p> <p>A troll is hiding in one of the workshop toolboxes. Use \"grep\" while ignoring case to find which toolbox the troll is in.</p> <p>Run <code>grep -i troll *</code> to read all files in current directory, searching for the case-insensitive word troll.</p> <p></p> <p>Answer</p> <p>grep -i troll *</p>"},{"location":"objectives/o3/#question-10","title":"Question 10","text":"<p>Question</p> <p>A troll is blocking the present_engine from starting. Run the present_engine binary to retrieve this troll.</p> <p>First, we need to find the present_engine file using <code>find / -name present_engine 2&gt;/dev/null</code> which looks for all files with this name while dropping all error messages for cleaner output (stderr in this case is lack of permissions for some files/directories). Once the file is found in the current directory, it cannot be ran (permission denied) - this is due to missing execution bit. Set the execution bit using <code>chmod +x</code> and rerun the file FTW.</p> <p></p> <p>Answer</p> <p>find / -name present_engine 2&gt;/dev/null chmod +x /home/elf/workshop/present_engine /home/elf/workshop/present_engine</p>"},{"location":"objectives/o3/#question-11","title":"Question 11","text":"<p>Question</p> <p>Trolls have blown the fuses in /home/elf/workshop/electrical. cd into electrical and rename blown_fuse0 to fuse0.</p> <p>To rename files, use <code>mv</code> .</p> <p></p> <p>Answer</p> <p>cd /home/elf/workshop/electrical mv blown_fuse0 fuse0</p>"},{"location":"objectives/o3/#question-12","title":"Question 12","text":"<p>Question</p> <p>Now, make a symbolic link (symlink) named fuse1 that points to fuse0</p> <p>Use <code>ln -s</code> to create a symbolic link - source filename is first while destination is next.</p> <p></p> <p>Answer</p> <p>ln -s fuse0 fuse1</p>"},{"location":"objectives/o3/#question-13","title":"Question 13","text":"<p>Question</p> <p>Make a copy of fuse1 named fuse2.</p> <p>To copy, use <code>cp</code>.</p> <p></p> <p>Answer</p> <p>cp fuse1 fuse2</p>"},{"location":"objectives/o3/#question-14","title":"Question 14","text":"<p>Question</p> <p>We need to make sure trolls don't come back. Add the characters \"TROLL_REPELLENT\" into the file fuse2.</p> <p>Use <code>echo</code> to output text, appending (<code>&gt;&gt;</code>) it to the file.</p> <p></p> <p>Answer</p> <p>echo \"TROLL_REPELLENT\" &gt;&gt; fuse2</p>"},{"location":"objectives/o3/#question-15","title":"Question 15","text":"<p>Question</p> <p>Find the troll somewhere in /opt/troll_den.</p> <p>Since challenge mentions \"somewhere,\" we can use case-insensitive <code>-iname</code> switch for the <code>find</code> command, as well as wildcards (*) to include filenames that contain troll in their filename.</p> <p> </p> <p>Answer</p> <p>find /opt/troll_den -iname troll</p>"},{"location":"objectives/o3/#question-16","title":"Question 16","text":"<p>Question</p> <p>Find the file somewhere in /opt/troll_den that is owned by the user troll.</p> <p>To find file base on owner, use <code>-user</code> switch.</p> <p> </p> <p>Answer</p> <p>find /opt/troll_den -user troll 2&gt;/dev/null</p>"},{"location":"objectives/o3/#question-17","title":"Question 17","text":"<p>Question</p> <p>Find the file created by trolls that is greater than 108 kilobytes and less than 110 kilobytes located somewhere in /opt/troll_den.</p> <p>Find a file (<code>-type f</code>) that is over 108KB (<code>-size +108l</code>) but less than 110KB (<code>-size -110k</code>).</p> <p></p> <p>Answer</p> <p>find /opt/troll_den -type f -size +108k -size -110k</p>"},{"location":"objectives/o3/#question-18","title":"Question 18","text":"<p>Question</p> <p>List running processes to find another troll.</p> <p><code>top</code> can be used to monitor running processes.</p> <p></p> <p>Answer</p> <p>top</p>"},{"location":"objectives/o3/#question-19","title":"Question 19","text":"<p>Question</p> <p>The 14516_troll process is listening on a TCP port. Use a command to have the only listening port display to the screen.</p> <p>To get listening processes use <code>netstat</code> with <code>-ntlp</code> switches to not resolve names, TCP-only, listening, and programs/PID respectfully.</p> <p></p> <p>Answer</p> <p>netstat -ntlp</p>"},{"location":"objectives/o3/#question-20","title":"Question 20","text":"<p>Question</p> <p>The service listening on port 54321 is an HTTP server. Interact with this server to retrieve the last troll.</p> <p>Since this is an HTTP server, <code>curl</code> can be used to make a basic request to the localhost on specified port.</p> <p></p> <p>Answer</p> <p>curl http://127.0.0.1:54321</p>"},{"location":"objectives/o3/#question-21","title":"Question 21","text":"<p>Question</p> <p>Your final task is to stop the 14516_troll process to collect the remaining presents.</p> <p>To list all running processes, <code>ps -aux</code> can be used and from there, use <code>kill</code> to kill the process PID in question.</p> <p></p> <p>Answer</p> <p>kill 28128</p> <p>Challenge Completed! </p>"},{"location":"objectives/o3/#response","title":"Response","text":"<p>Ginger Breddie @Santa's Surf Shack</p> <p>Wow, if your surfing skills are as good as your Linux skills, you could be winning competitions!</p> <p>Off to explore the rest of Christmas Island...</p>"},{"location":"objectives/o4/","title":"Reportinator","text":"<p>Difficulty:  Direct link: Reportinator terminal</p>"},{"location":"objectives/o4/#objective","title":"Objective","text":"<p>Request</p> <p>Noel Boetie used ChatNPT to write a pentest report. Go to Christmas Island and help him clean it up.</p> <p></p> Noel Boetie @Rudolph's Rest Resort <p>Hey there, Noel Boetie speaking! I recently tried using ChatNPT to generate my penetration testing report. It's a pretty nifty tool, but there are a few issues in the output that I've noticed. I need some guidance in finding any errors in the way it generated the content, especially those odd hallucinations in the LLM output. I know it's not perfect, but I'd really appreciate the extra eyes on this one. Some of the issues might be subtle, so don't be afraid to dig deep and ask for further clarification if you're unsure. I've heard that you folks are experts about LLM outputs and their common issues, so I trust you can help me with this. Your input will be invaluable to me, so please feel free to share any insights or findings you may have. I'm looking forward to working with you all and improving the quality of the ChatNPT-generated penetration testing report. Thanks in advance for your help! I truly appreciate it! Let's make this report the best it can be!</p>"},{"location":"objectives/o4/#hints","title":"Hints","text":"Reportinator <p>From: Noel Boetie Terminal: Reportinator I know AI sometimes can get specifics wrong unless the prompts are well written. Maybe chatNPT made some mistakes here.</p>"},{"location":"objectives/o4/#solution-1","title":"Solution 1","text":"<p>In the Penetration Report there are 9 total findings - some are legitimate and some are hallucinated by experimental AI technology. We need to find which are which. Solution 1 takes an absolute  hacker approach basing on a simple fact that essentially there are 9 questions with only 2 possible answers, which gives us a maximum of 512 possible answers (2^9). This means that brute-forcing should be possible.</p> <p>Let's observe the network traffic using Chrome Dev Tools as answers are being checked to an interesting website:   From this information, we have all important pieces to attempt the brute-force: 1. The URL for checking answers is https://hhc23-reportinator-dot-holidayhack2023.ue.r.appspot.com/check 2. Method used is POST 3. The data portion is sent as a common form data 4. Response for invalid answer is status code 400 5. In form data, questions are represented as \"input-N,\" where N is 1-9 6. In form data, answers are 0 for legitimate finding and 1 for hallucination</p> <p>Create a simple Python script: brute.py<pre><code>import requests\n\n# The URL\nurl = \"https://hhc23-reportinator-dot-holidayhack2023.ue.r.appspot.com/check\"\n\n# Basic loop of 2^9\nfor a in range(2):\n    for b in range(2):\n        for c in range(2):\n            for d in range(2):\n                for e in range(2):\n                    for f in range(2):\n                        for g in range(2):\n                            for h in range(2):\n                                for i in range(2):\n\n                                    # Data payload (will be properly formatted at send by Python)\n                                    payload = {\"input-1\": a,\n                                               \"input-2\": b,\n                                               \"input-3\": c,\n                                               \"input-4\": d,\n                                               \"input-5\": e,\n                                               \"input-6\": f,\n                                               \"input-7\": g,\n                                               \"input-8\": h,\n                                               \"input-9\": i,\n                                               }\n\n                                    # Make the POST request with data and print failures\n                                    r = requests.post(url, data=payload)\n                                    print(str(r.status_code) + \" \" + str(r.content))\n\n                                    # If status code not 400 =&gt; SUCCESS! and exit\n                                    if r.status_code != 400:\n                                        print(\"WINNER: \" + str(payload))\n                                        exit(0)\n</code></pre> Run the script, and sure enough correct answer is found.  Now all that's left is to submit answers 3, 6, and 9 as inaccurate and receive successful validation. </p> <p>Answer</p> <p>Findings 3, 6, and 9 are inaccurate.</p>"},{"location":"objectives/o4/#solution-2","title":"Solution 2","text":"<p>If you enjoy reading reports instead of writing scripts, the solution can be found by looking for small discrepancies in findings.</p> <p>In finding 3, the TCP port is above maximum allowed of 65535 - FALSE FINDING: </p> <p>In finding 6, there's no such thing as HTTP SEND - the correct terminology should be either HTTP GET or HTTP POST: </p> <p>In finding 9, the location for IP is not valid - an octet cannot be over 255: </p> <p>Successful outcome is the same!</p>"},{"location":"objectives/o4/#response","title":"Response","text":"<p>Noel Boetie @Rudolph's Rest Resort</p> <p>Great job on completing that challenge! Ever thought about how your newfound skills might come into play later on? Keep that mind sharp, and remember, today's victories are tomorrow's strategies!</p> <p>Next up is Azure 101...</p>"},{"location":"objectives/o5/","title":"Azure 101","text":"<p>Difficulty:  Direct link: Azure 101 terminal</p>"},{"location":"objectives/o5/#objective","title":"Objective","text":"<p>Request</p> <p>Help Sparkle Redberry with some Azure command line skills. Find the elf and the terminal on Christmas Island.</p> <p></p> Sparkle Redberry @Rudolph's Rest Resort <p>Hey, Sparkle Redberry here! So, I've been trying to learn about Azure and the Azure CLI and it's driving me nuts. Alabaster Snowball decided to use Azure to host some of his fancy new IT stuff on Geese Islands, and now us elves have to learn it too. Anyway, I know it's important and everyone says it's not as difficult as it seems, but honestly it still feels like quite a challenge for me. Alabaster sent us this Azure CLI reference as well. It's super handy, he said. Honestly, it just confuses me even more. If you can spare a moment, would you mind giving me a hand with this terminal? I'd be really grateful! Pretty please, with holly leaves on top!</p>"},{"location":"objectives/o5/#hints","title":"Hints","text":"Azure CLI Reference <p>From: Sparkle Redberry Terminal: Azure 101 The Azure CLI tools come with a builtin help system, but Microsoft also provides this handy cheatsheet.</p>"},{"location":"objectives/o5/#solution","title":"Solution","text":"<p>This challenge is all about getting familiar with Azure's az CLI and doing a lil' recon on Geese Islands' IT infrastructure. \ud83d\ude09</p>"},{"location":"objectives/o5/#question-1","title":"Question 1","text":"<p>Question</p> <p>You may not know this but the Azure cli help messages are very easy to access. First, try typing: $ az help | less</p> <p>It's nice to know <code>help</code> is always available in addition to documentation.</p> <p></p> <p>Answer</p> <p>az help | less</p>"},{"location":"objectives/o5/#question-2","title":"Question 2","text":"<p>Question</p> <p>Next, you've already been configured with credentials. Use 'az' and your 'account' to 'show' your current details and make sure to pipe to less ( | less )</p> <p>The az account show gets the details of a subscription. Important to note here, the account is part of Azure Cloud and its name is \"northpole-sub\".</p> <p></p> <p>Answer</p> <p>az account show | less</p>"},{"location":"objectives/o5/#question-3","title":"Question 3","text":"<p>Question</p> <p>Excellent! Now get a list of resource groups in Azure. For more information: https://learn.microsoft.com/en-us/cli/azure/group?view=azure-cli-latest</p> <p>The az group list lists resource groups. Notable here is that this account has 2 resource groups: \"northpole-rg1\" and \"northpole-rg2\". ChatGPT is helpful for gentle introduction to Azure's terminology, should it be needed.</p> <p></p> <p></p> <p>Answer</p> <p>az group list | less</p>"},{"location":"objectives/o5/#question-4","title":"Question 4","text":"<p>Question</p> <p>Ok, now use one of the resource groups to get a list of function apps. For more information: https://learn.microsoft.com/en-us/cli/azure/functionapp?view=azure-cli-latest Note: Some of the information returned from this command relates to other cloud assets used by Santa and his elves.</p> <p>The az functionapp list lists function apps and requires you to pass a resource group as a parameter for this question. If you are more familiar working with AWS, ChatGPT can make a simple comparison to Azure's terminology.  Interesting finding here is that there are no function apps in northpole-rg2 resource group but northpole-rg1 contains one with hostname \"northpole-ssh-certs-fa.azurewebsites.net\" and interesting tags of \"/api/create-cert?code=candy-cane-twirl\" and \"northpole-ssh-certs\". It is of type \"Microsoft.Web/sites\", so a web app and it's currently running.</p> <p></p> <p></p> <p>Answer</p> <p>az functionapp list --resource-group northpole-rg1 | less</p>"},{"location":"objectives/o5/#question-5","title":"Question 5","text":"<p>Question</p> <p>Find a way to list the only VM in one of the resource groups you have access to. For more information: https://learn.microsoft.com/en-us/cli/azure/vm?view=azure-cli-latest</p> <p>The az vm list lists details of virtual machines. It also requires a resource group to be passed as a parameter for this question. In our case, the infrastructure is starting to make sense - while northpole-rg1 resource group contains the function app, northpole-rg2 has the VM. Notable aspects of the VM is that it's Ubuntu Server 16.04 and named \"NP-VM1\".</p> <p></p> <p>Answer</p> <p>az vm list --resource-group northpole-rg2</p>"},{"location":"objectives/o5/#question-6","title":"Question 6","text":"<p>Question</p> <p>Find a way to invoke a run-command against the only Virtual Machine (VM) so you can RunShellScript and get a directory listing to reveal a file on the Azure VM. For more information: https://learn.microsoft.com/en-us/cli/azure/vm/run-command?view=azure-cli-latest#az-vm-run-command-invoke</p> <p>The az vm run-command invoke executes a specific command on a VM. You need to pass the resource group, VM name, command ID (required), and the command. Arguments to the command can be passed via <code>--parameters</code> switch. One potentially interesting detail from the VM is that there's a user named \"jinglebells\".</p> <p></p> <p>Answer</p> <p>az vm run-command invoke --resource-group northpole-rg2 --name NP-VM1 --command-id RunShellScript --scripts \"ls\"</p> <p></p>"},{"location":"objectives/o5/#response","title":"Response","text":"<p>Sparkle Redberry @Rudolph's Rest Resort</p> <p>Wow, you did it! It makes quite a bit more sense to me now. Thank you so much! That Azure Function App URL you came across in the terminal looked interesting. It might be part of that new project Alabaster has been working on with the help of ChatNPT. Let me tell you, since he started using ChatNPT he's been introducing a lot of amazing innovation across the islands. Knowing Alabaster, he'll be delighted to tell you all about it! I think I last saw him on Pixel island. By the way, as part of the Azure documentation he sent the elves, Alabaster also noted that if Azure CLI tools aren't available in an Azure VM we should use the Azure REST API instead. I'm not really sure what that means, but I guess I know what I'll be studying up on next. Next up we need to pay a visit to Ginger Breddie in Santa's Shack...</p> <p>Sparkle Redberry shared some interesting insights - Alabaster is working on the function app running in this Azure environment and should Azure CLI not be available,  it's possible to use REST API instead. Good to know...</p>"},{"location":"objectives/o6/","title":"Certificate SSHenanigans","text":"<p>Difficulty:  Direct link: Function App Target server: ssh-server-vm.santaworkshopgeeseislands.org</p>"},{"location":"objectives/o6/#objective","title":"Objective","text":"<p>Request</p> <p>Go to Pixel Island and review Alabaster Snowball's new SSH certificate configuration and Azure Function App. What type of cookie cache is Alabaster planning to implement?</p> <p></p> Goose of Pixel Island @Rainraster Cliffs <p>hisssss</p> Alabaster Snowball @Rainraster Cliffs <p>Hello there! Alabaster Snowball at your service. I could use your help with my fancy new Azure server at ssh-server-vm.santaworkshopgeeseislands.org. ChatNPT suggested I upgrade the host to use SSH certificates, such a great idea! It even generated ready-to-deploy code for an Azure Function App so elves can request their own certificates. What a timesaver! I'm a little wary though. I'd appreciate it if you could take a peek and confirm everything's secure before I deploy this configuration to all the Geese Islands servers. Generate yourself a certificate and use the monitor account to access the host. See if you can grab my TODO list. If you haven't heard of SSH certificates, Thomas Bouve gave an introductory talk and demo on that topic recently. Oh, and if you need to peek at the Function App code, there's a handy Azure REST API endpoint which will give you details about how the Function App is deployed.</p>"},{"location":"objectives/o6/#hints","title":"Hints","text":"SSH Certificates Talk <p>From: Alabaster Snowball Objective: Certificate SSHenanigans Check out Thomas Bouve's talk and demo to learn all about how you can upgrade your SSH server configuration to leverage SSH certificates.</p> Azure Function App Source Code <p>From: Alabaster Snowball Objective: Certificate SSHenanigans The get-source-control Azure REST API endpoint provides details about where an Azure Web App or Function App is deployed from.</p>"},{"location":"objectives/o6/#solution","title":"Solution","text":"<p>To get started with this challenge, it's a good idea to learn about SSH Certificates by attending KringeCon. Essentially, the goal of this set-up is instead of  importing each individual public key, the server can just trust any client logging in with their private key who's public key been signed by the trusted CA. In exchange, client can also trust the CA and the server connection will always be verified (no unknown host warning). Also, from the client's perspective, their public key would need to be signed by this trusted CA and then logging in is possible via this established trust. </p> <p></p> <p>From Alabaster, we know the user is <code>monitor</code> and target server is <code>ssh-server-vm.santaworkshopgeeseislands.org</code>. We also have the Request SSH Certificate function app served from  their Azure environment.</p> <p>Let's create an SSH key pair using <code>ssh-keygen</code>:</p> <p></p> <p>Copy-paste the public key in the function app. This will sign the key using the CA (this is app's functionality) and ultimately will allow SSH.</p> <p></p> <p>Now save the cert returned from the app. Its validity can also be verified using <code>ssh-keygen</code>. This confirms what we would expect - it is an SSH user certificate, it's signed by principal <code>elf</code> and allows PTY access.</p> <p></p> <p>At this point, we can SSH in, providing the private key and the certificate. This command really freaks you out the first time you run it. TWO?!?! <code>-i</code> parameters. \ud83d\ude02</p> <p></p> <p>Also, Satellite Tracker app is an interesting find that's served when first logged in.</p> <p></p> <p>For now we have low permission access as the monitor account but it looks like ultimately we need to escalate to <code>alabaster</code> to find out what kind of cookie cache he's implementing.</p> <p></p> <p>Look around the system to find some interesting information related to the SSH app. In the <code>/etc/ssh/auth_principals</code>, the certificate's principals are stored. In addition to the KringleCon talk, ChatGPT can be a good source to get more information about these principals. We know that <code>monitor</code> account was signed by \"elf\" principal so we can assume that \"admin\" is used for <code>alabaster</code>.</p> <p></p> <p></p> <p>Let's get admin principal to provide us the certificate. This can be done by that Azure REST API elfs mentioned because this machine is in their Azure environment. Specifically, Alabaster mentioned the get-source-control Azure REST API, which works on https://management.azure.com resource. This domain requires an authorization token but since the VM is joined to the Azure environment, it should be possible to get this token using Azure Managed Identity. This can be found by looking through Azure documentation or simply asking ChatGPT.</p> <p></p> <p>The IMDS is Azure Instance Metadata Service and it does provide us the authorization token, just like AI suggested.</p> <p></p> <p>This access token can now be used within the get-source-control Azure REST API call to get the source control configuration of the function app. For convenience, you can store this large token in a file for <code>curl</code>, just don't forget to properly format it:</p> <p></p> <p>To build the URL, we need <code>subscriptionId</code>, <code>resourceGroupName</code> and app's <code>name</code> - we have this information from all the recon we did at Azure 101 objective. \ud83d\ude09 Now make the REST API request and learn where source code is stored:</p> <p></p> <p>At the GitHub repo, take a look at function app's source code. The interesting part here is as input from client  is being processed (JSON form), there's <code>ssh_pub_key</code> that you would expect and <code>pricipal</code> which is apparently available \ud83d\ude01 but looks like if it's not provided, it's just set to <code>DEFAULT_PRINCIPAL</code>.</p> <p></p> <p>Well, let's set it explicitly then to not use the default. Generate a new key-pair using <code>ssh-keygen</code> just like we did for <code>monitor</code> and use Burp Suite proxy to manipulate the request before sending it. Intercept the request, add the privileged principal and send it:</p> <p></p> <p>Just as expected, this provides the \"admin\" certificate:</p> <p></p> <p>Now all that's left is login as <code>alabaster</code> (remember he's the user with \"admin\" principal), and read his to-do note.</p> <p></p> <p>Answer</p> <p>gingerbread    </p>"},{"location":"objectives/o6/#response","title":"Response","text":"<p>Alabaster Snowball @Rainraster Cliffs</p> <p>Oh my! I was so focused on the SSH configuration I completely missed the vulnerability in the Azure Function App. Why would ChatNPT generate code with such a glaring vulnerability? It's almost like it wanted my system to be unsafe. Could ChatNPT be evil? Thanks for the help, I'll go and update the application code immediately! While we're on the topic of certificates, did you know Active Directory (AD) uses them as well? Apparently the service used to manage them can have misconfigurations too. You might be wondering about that SatTrackr tool I've installed on the monitor account? Here's the thing, on my nightly stargazing adventures I started noticing the same satellite above Geese Islands. I wrote that satellite tracker tool to collect some additional data and sure enough, it's in a geostationary orbit above us. No idea what that means yet, but I'm keeping a close eye on that thing!</p> <p>Alabaster is asking all the right questions. Also, what is this geostationary orbit all about?!?! Interesting! For now, I think it makes sense to go for the kill on their Azure environment - Active Directory auditing next...</p>"},{"location":"objectives/o7/","title":"Elf Hunt","text":"<p>Difficulty:  Direct link: Elf Hunt terminal</p>"},{"location":"objectives/o7/#objective","title":"Objective","text":"<p>Request</p> <p>Piney Sappington needs a lesson in JSON web tokens. Hack Elf Hunt and score 75 points.</p> <p></p> Piney Sappington @Rainraster Cliffs <p>Hey there, friend! Piney Sappington here. You look like someone who's good with puzzles and games. I could really use your help with this Elf Hunt game I'm stuck on. I think it has something to do with manipulating JWTs, but I'm a bit lost. If you help me out, I might share some juicy secrets I've discovered. Let's just say things around here haven't been exactly... normal. So, what do ya say? Are you in? Oh, brilliant! I just know we'll crack this game together. I can't wait to see what we uncover, and remember, mum's the word! Thanks a bunch! Keep your eyes open and your ears to the ground.</p>"},{"location":"objectives/o7/#hints","title":"Hints","text":"JWT Secrets Revealed <p>From: Piney Sappington Terminal: Elf Hunt Unlock the mysteries of JWTs with insights from PortSwigger's JWT Guide.</p>"},{"location":"objectives/o7/#solution","title":"Solution","text":"<p>To solve this challenge, obviously it is a good idea to read PortSwigger's JWT Guide, it describes some of the possible attacks on JWT tokens. Read it? Good, now let's play the game! It is an elf hunting game and the problem is elfs are flying very fast so it's hart to catch them. OK we know there should be some kind of JWT token for the game so let's look for it in the game's JS source code using Chrome Dev Tools.  It is being set as a cookie:</p> <p></p> <p>JWT's full value can be printed on the Dev Tools JS console - be sure to switch to the elfhunt.org/ context (this is the game site):</p> <p></p> <p>Load up the token into JWT.io convenient decoder and learn that it is not signed (alg=none) and the only data there is <code>speed</code> which is set to <code>-500</code>.</p> <p></p> <p>Simply enough, we now know that there's <code>speed</code> variable and it's stored as a JWT token in cookies. Again, using the same JS console, check the speed variable and sure enough, it can be conveniently accessed. You can see the current value of <code>-500</code>. Now just change it to <code>-100</code> or even <code>-50</code> for much slower elfs.</p> <p></p> <p>The JS variable change takes immediate effect. Now the game is a piece of cake and 75 elfs can be easily hunted down!</p> <p>Answer</p> <p>speed to -50 #FTW </p> <p>Oh and what is this - Captain's Journal?!? </p>"},{"location":"objectives/o7/#response","title":"Response","text":"<p>Piney Sappington  @Rainraster Cliffs</p> <p>Well done! You've brilliantly won Elf Hunt! I couldn't be more thrilled. Keep up the fine work, my friend! What have you found there? The Captain's Journal? Yeah, he comes around a lot. You can find his comms office over at Brass Buoy Port on Steampunk Island.</p> <p>Captain's journal found and we know that his comms office over at Brass Buoy Port on Steampunk Island. The road seems to lead there...</p>"},{"location":"objectives/o8/","title":"Active Directory","text":"<p>Difficulty: </p>"},{"location":"objectives/o8/#objective","title":"Objective","text":"<p>Request</p> <p>Go to Steampunk Island and help Ribb Bonbowford audit the Azure AD environment. What's the name of the secret file in the inaccessible folder on the FileShare?</p> <p></p> Goose of Steampunk Island @Coggoggle Marina <p>cluck cluck</p> Ribb Ronbowford @Coggoggle Marina <p>Hello, I'm Ribb Bonbowford. Nice to meet you! Oh golly! It looks like Alabaster deployed some vulnerable Azure Function App Code he got from ChatNPT. Don't get me wrong, I'm all for testing new technologies. The problem is that Alabaster didn't review the generated code and used the Geese Islands Azure production environment for his testing. I'm worried because our Active Directory server is hosted there and Wombley Cube's research department uses one of its fileshares to store their sensitive files. I'd love for you to help with auditing our Azure and Active Directory configuration and ensure there's no way to access the research department's data. Since you have access to Alabaster's SSH account that means you're already in the Azure environment. Knowing Alabaster, there might even be some useful tools in place already.</p>"},{"location":"objectives/o8/#hints","title":"Hints","text":"Misconfiguration ADventures <p>From: Alabaster Snowball Objective: Active Directory Certificates are everywhere. Did you know Active Directory (AD) uses certificates as well? Apparently the service used to manage them can have misconfigurations too.</p> Useful Tools <p>From: Ribb Bonbowford Objective: Active Directory It looks like Alabaster's SSH account has a couple of tools installed which might prove useful.</p>"},{"location":"objectives/o8/#solution","title":"Solution","text":"<p>To get started with Active Directory audit, login as <code>alabaster</code> using private key and SSH cert created during Certificate SSHenanigans challenge (same Azure environment) and look around for these  \"useful tools\" Ribb mentioned. The useful tools have got to be Impacket, which is a collection of Python classes for working with network protocols. They are handy for things like file shares and authentication attacks. </p> <p></p> <p>Almost all Impacket tools require the knowledge of target server or DC and for the most interesting things, valid credentials. At this point we don't have this information since even <code>alabaster</code> was logged in using only the key + cert. We need to continue to enumerate Azure environment to find more information. Let's again get an auth token. Properly output the authorization token into a file and confirm with a simple subscription request that everything is working correctly. Confirmed!</p> <p></p> <p>Now enumerate the Azure environment using REST API to look for something useful like values for Impacket. Let's list all the resources in a subscription. This shows us that there are 2 resources of type \"Microsoft.KeyVault\" - this should be interesting enough to dig a bit deeper. \ud83d\ude0a</p> <p></p> <p>More detailed information about KeyVaults can be retrieved like so. The most interesting  information here is vault URLs which are used for accessing secrets (as well as keys, certificates, and storage) within these vaults and they will be handy. Note how KeyVault URLs are at a different domains.</p> <p></p> <p></p> <p>If you try to retrieve keys (or any other vault item) from the vaults, you will see the following error. This is because our OAuth access token audience is set for <code>https://management.azure.com/</code> and not <code>https://vault.azure.net</code>.</p> <p></p> <p>So, let's fix that - notice the Vault resource being requested (different OAuth audience):</p> <p></p> <p>Now we can try to get secrets. The important piece in value is the ID.</p> <p></p> <p>Using this ID, request this secret value. Bingo! This appears to be a PowerShell script for adding a user to the domain containing sensitive values.</p> <p></p> <p>Parse out the values and we have username, AD domain, password, and DC IP. These are the exact values we can take to Impacket.</p> <p></p> <p>Start up impacket and list users is a good next step - besides <code>elfy</code>, there's also <code>alabaster</code> and <code>wombleycube</code> (this should be useful later):</p> <p></p> <p>Looking around shares is another good enumeration step. This confirms that as user <code>elfy</code>, we do not have access to the <code>super_secret_research</code> folder which should contain the file we're looking for:</p> <p></p> <p>Taking into account \"Misconfiguration ADventures\" hint from Alabaster, we know that there might be a potential misconfiguration with AD certificates. Impacket's certipy should be good for finding these. Some general information about the CA can be gathered with its <code>find</code> command:</p> <p></p> <p>And a specific vulnerability found within one of the certificate templates:</p> <p></p> <p>With <code>certipy</code>, it is possible to abuse this vulnerability and request the certificate. As <code>elfy</code>, you can actually request authentication certificate for <code>womblecube</code>.  This will store the pfx certificate locally.</p> <p></p> <p>Now authenticate using <code>certipy</code> and the newly-requested certificate via Kerberos. The <code>auth</code> command will use either the PKINIT Kerberos extension or Schannel protocol for authentication with the provided certificate.  Kerberos can be used to retrieve a TGT and the NT hash for the target user, whereas Schannel will open a connection to LDAPS and drop into an interactive shell with limited LDAP commands.</p> <p></p> <p>Excellent, NTLM hash obtained! Now all that's left is pass-the-hash as <code>wombleycube</code> and look through the <code>super_secret_research</code> folder - #FTW:</p> <p></p> <p>Interesting instructions for opening the Satellite Ground Station (SGS). \ud83d\ude09</p> <p>Answer</p> <p>InstructionsForEnteringSatelliteGroundStation.txt    </p>"},{"location":"objectives/o8/#response","title":"Response","text":"<p>Ribb Ronbowford @Coggoggle Marina</p> <p>Wow, nice work. I'm impressed! This is all starting to feel like more than just a coincidence though. Everything Alabaster's been setting up lately with the help of ChatNPT contains all these vulnerabilities. It almost feels deliberate, if you ask me. Now obviously an LLM AI like ChatNPT cannot have deliberate motivations itself. It's just a machine. But I wonder who could have built it and who is controlling it? On top of that, we apparently have a satellite ground station on Geese Islands. I wonder where that thing would even be located. Well, I guess it's probably somewhere on Space Island, but I've not been there yet. I'm not a big fan of jungles, you see. I have this tendency to get lost in them. Anyway, if you feel like investigating, that'd be where I'd go look. Good luck and I'd try and steer clear of ChatNPT if I were you.</p> <p>What's this about satellite ground station on Geese Islands and it being somewhere in the jungles of Space Island. Thanks for the advice Ribb...</p>"},{"location":"objectives/o9/","title":"The Captain's Comms","text":"<p>Difficulty:  Direct link: The Captain's Comms terminal</p>"},{"location":"objectives/o9/#objective","title":"Objective","text":"<p>Request</p> <p>Speak with Chimney Scissorsticks on Steampunk Island about the interesting things the captain is hearing on his new Software Defined Radio. You'll need to assume the GeeseIslandsSuperChiefCommunicationsOfficer role.</p> <p></p> Chimney Scissorsticks @Brass Bouy Port <p>Ahoy there, I'm Chimney Scissorsticks! You may have noticed some mischief-makers planning to stir up trouble ashore. They've made many radio broadcasts which the captain has been monitoring with his new software defined radio (SDR). The new SDR uses some fancy JWT technology to control access. The captain has a knack for shortening words, some sorta abbreviation trick. Not familiar with JWT values? No worries; just think of it as a clue-solving game. I've seen that the Captain likes to carry his journal with him wherever he goes. If only I could find the planned \"go-date\", \"go-time\", and radio frequency they plan to use. Remember, the captain's abbreviations are your guiding light through this mystery! Once we find a JWT value, these villains won't stand a chance. The closer we are, the sooner we'll be thwarting their pesky plans! We need to recreate an administrative JWT value to successfully transmit a message. Good luck, matey! I've no doubts about your cleverness in cracking this conundrum!</p>"},{"location":"objectives/o9/#hints","title":"Hints","text":"Comms Abbreviations <p>From: Chimney Scissorsticks Terminal: The Captain's Comms I hear the Captain likes to abbreviate words in his filenames; shortening some words to just 1,2,3, or 4 letters.</p> Comms Web Interception Proxies <p>From: Chimney Scissorsticks Terminal: The Captain's Comms Web Interception proxies like Burp and Zap make web sites fun!</p> Comms Journal <p>From: Chimney Scissorsticks Terminal: The Captain's Comms I've seen the Captain with his Journal visiting Pixel Island! </p> Comms JWT Intro <p>From: Chimney Scissorsticks Terminal: The Captain's Comms A great introduction to JSON Web Tokens is available from Auth0.</p> Comms Private Key <p>From: Chimney Scissorsticks Terminal: The Captain's Comms Find a private key, update an existing JWT!</p>"},{"location":"objectives/o9/#solution","title":"Solution","text":"<p>Ok let's solve The Captain's Comms... </p> <p>Jump into the terminal and start putting pieces of the puzzle together.  This is Captain's battlestation:</p> <p></p> <p>First, the background. We have the newly installed 'Just Watch This' Software Defined Radio system and are looking for the miscreants 'go-time' date and time for the attack so we could send a misleading message for  4 hours prior, and this will make sure islands' authorities are locked &amp; loaded for response. There are different ROLEs that are required for AUTHORIZATION to different items in Captain's Comms.</p> <p></p> <p>Let's look at the Owner's Card - from this we can gather that we should look for <code>rMonitor.tok</code> file containing the <code>radioMonitor</code> token which is somewhere in the default <code>/jwtDefault</code> directory. The proper use of this AUTHORIZATION token will allow viewing signals but not decode them. To decode, we would need <code>radioDecoder</code> role token. Sounds like <code>radioMonitor</code> is the initial role we should focus on obtaining. Cool, onto finding more about getting to this file.</p> <p></p> <p>Quickly check our current role. Copy the <code>justWatchThisRole</code> cookie value for <code>https://captainscomms.com</code> site (using Dev Tools) and decode the value using JWT.io. Good to know - our current role is <code>radioUser</code>. Also, keep in mind that the message is signed by <code>RS256</code> so you can't simply modify its contents, you would need the key to re-sign the payload.</p> <p></p> <p>Ok now let's refer to the Owner's Manual Volume 1. This confirms that we are on the lowest permissions role (<code>radioUser</code>) as well as we need to look for <code>radioMonitor</code> mentioned on the Owner's Card.</p> <p></p> <p>Let's try to get the <code>radioMonitor</code> role token based on all this information. From the Owner's Card, location should be <code>https://captainscomms.com/jwtDefault/rMonitor.tok</code>. On first access to this location, error \"Invalid authorization token provided\" occurs. Ok, let's observe normal traffic using Burp while interacting with Captain's Comms.  The request shows that we are actually authenticating with the token via Authorization header on each request. The rest of Captain's Comms requests likely require this header and that's why there was an error.</p> <p></p> <p>Re-send the request for <code>https://captainscomms.com/jwtDefault/rMonitor.tok</code> with our current Authorization header and value:</p> <p></p> <p>The token is returned and it can be confirmed. We can now access the <code>radioMonitor</code> required for Captain's SDR.</p> <p></p> <p>You can either use Burp to intercept the request to the SDR and replace Authorization header or simply copy-paste the new token value into <code>justWatchThis</code> cookie value. The second way is more convenient.</p> <p></p> <p>SDR is now accessible but not not very useful without the <code>radioDecoder</code> role.</p> <p></p> <p></p> <p>Let's target obtaining <code>radioDecoder</code> token now. This token is not far away and after some tinkering, it can be found the same way as <code>radioMonitor</code>, by simply accessing <code>https://captainscomms.com/jwtDefault/rDecoder.tok</code> with the <code>radioMonitor</code> token in the Authorization header. Got it and confirmed:</p> <p></p> <p>Again, copy-paste the token into <code>justWatchThis</code> cookie and access the SDR - all 3 transmissions can now be decoded! Transmission 1 tells you that Captain's private key is in a folder called <code>TH3CAPSPR1V4T3F0LD3R</code>. \ud83e\udd26\u200d\u2642\ufe0f</p> <p></p> <p>Transmission 2 gives us some kind of encoded message - we can investigate this further later.</p> <p></p> <p>Transmission 3 provides the frequency <code>10426 Hz</code>.</p> <p></p> <p>OK now we need to focus on obtaining the final JWT Radio Administrator privileges needed for the Captain's Transmitter because it's inaccessible with current privileges.</p> <p></p> <p>Reading through Captain's To-Do List, he seems to have used their less-than-convincing ChatNPT to store JWT private and public keys. We also have that journal from Chimney Scissorsticks (Comms Journal hint). Captain's Journal mentions another role <code>GeeseIslandsSuperChiefCommunicationsOfficer</code> which is likely the final JWT Radio Administrator role we need.</p> <p></p> <p>Now let's review Captain's ChatNPT Initial To-Do List since it was crossed off from Captain's To-Do List. This is interesting because we know exactly where this \"same directory\" is, so looking for <code>capsPubKey.key</code> file in <code>keys</code> folder should be no problem.</p> <p></p> <p>Make the request to <code>https://captainscomms.com/jwtDefault/keys/capsPubKey.key</code> with <code>radioDecoder</code> token and Captain's public key is retrieved.</p> <p></p> <p>Fix up the formatting a bit (no empty spaces) and <code>capsPubKey.key</code> is good to go:</p> <p></p> <p>Going back to Owner's Manual Volume II - it stresses the need to protect KEYs in FOLDERs. This feels like another hint, we need to go after finding Captain's private key, especially now that we know the folder name. </p> <p>At this point we should be able to find Captain's private key. We know all his keys are in <code>keys</code> folder and specifically he mentioned that we would never be able to find the private key folder but we did find it to be <code>TH3CAPSPR1V4T3F0LD3R</code> via Transmission 1. Based on Chimney Scissorsticks' hint that went something like \"I hear the Captain likes to abbreviate words in his filenames\", combine this with confirmed known public key name, we can make an educated guess that private key is called something like <code>capsPrivKey.key</code>.  Let's make the Burp request (again using our <code>radioDecoder</code> token) to <code>https://captainscomms.com/jwtDefault/keys/TH3CAPSPR1V4T3F0LD3R/capsPrivKey.key</code>.</p> <p></p> <p>Private key secured! Just a bit of formatting to remove empty spaces, and <code>capsPrivKey.key</code> is ready to be used.</p> <p></p> <p>Now we need to create a JWT token that would give us <code>GeeseIslandsSuperChiefCommunicationsOfficer</code> role and sign it using Captain's private key. Let's start with <code>radioDecoder</code> token, Base64 decode it, modify the value and sign the JWT. All this can be easily done on JWT.io - modify the role, paste public and private keys, and confirm signature is verified since both keys are present.</p> <p></p> <p>Again, change the <code>justWatchThis</code> cookie to the new admin value (JWT token from JWT.io) and access Captain's Transmitter.</p> <p></p> <p>We know the frequency from Transmission 3 and now just need to decode message in Transmission 2 for date and time. Let's refer to Just Watch This Appendix A - it points to the Lincolnshire Poacher Number Station. </p> <p></p> <p>Based on Lincolnshire Poacher Number Station format, we can strip metadata and determine that actual message is \"12249 12249 16009 16009 12249 12249 16009 16009\". Now we need to decode it - we can use DCODE to try to find the most fitting cipher.  After trying out a few different ciphers, I found that to decipher it, DCODE's Octal converter can be used:</p> <p></p> <p>Now the final step is to send misleading transmission. Since decoded date and time is 12/24 16:00, we need to send it for 4 hours earlier, so 12:00.</p> <p></p> <p>Answer</p> <p>Frequency: 10426 HZ Go-Date: 1224 Go-Time: 1200 </p>"},{"location":"objectives/o9/#response","title":"Response","text":"<p>Chimney Scissorsticks @Brass Bouy Port</p> <p>Brilliant work! You've outsmarted those scoundrels with finesse!</p> <p>Got Em!!!</p>"}]}